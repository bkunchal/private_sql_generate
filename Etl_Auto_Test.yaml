name: ETL Pipeline Testing with PySpark

on:
  push:
    branches:
      - "main"
      - "ci/*"
  pull_request:
    branches:
      - "main"

jobs:
  etl-tests:
    name: Run ETL Tests with PySpark
    runs-on: aexp-ubuntu-latest-medium

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      # Step 2: Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Set JAVA_HOME
        run: |
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Java Installation
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          ls -al $JAVA_HOME
          java -version

      # Step 3: Set up Python environment
      - name: Setup Python Environment
        id: setup-build-env
        uses: amex-eng/setup-python@aab54f53bb40df9752c5a5a2dc6554fe581dd984
        with:
          python-version: 3.13
          token: ${{ secrets.GH_NOSCOPE_TOKEN }}

      - name: Python Build
        id: python-build
        run: pip3 install -r requirements.txt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Step 4: Add repository to PYTHONPATH
      - name: Add repository to PYTHONPATH
        run: echo "PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      # Step 5: Generate affected_tests.txt using mapping.py
      - name: Identify Affected Tests
        id: identify-affected-tests
        run: python test/commons/mapping.py --mapping-file test/commons/Test_Cases_Mapping.json

      # Step 6: Run tests for affected files using the wrapper script
      - name: Run Tests for Affected Files
        if: steps.identify-affected-tests.outcome == 'success'
        run: python run_wrapper.py
        shell: bash

      # Step 7: Cleanup
      - name: Cleanup
        if: always()
        run: |
          rm -f affected_tests.txt
